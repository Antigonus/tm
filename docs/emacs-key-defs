
;; unicode
;;
  (global-set-key (kbd "C-x g d SPC") [?δ])
  (global-set-key (kbd "C-x g D SPC") [?Δ]) ; this 'delta' is not 'increment'!

  (global-set-key (kbd "C-x g g SPC") [?γ])
  (global-set-key (kbd "C-x g G SPC") [?Γ])

  (global-set-key (kbd "C-x g l SPC") [?λ])
  (global-set-key (kbd "C-x g L SPC") [?Λ])

  (global-set-key (kbd "C-x g p SPC") [?π])
  (global-set-key (kbd "C-x g P SPC") [?Π])

  (global-set-key (kbd "C-x g > = SPC") [?≥])
  (global-set-key (kbd "C-x g < = SPC") [?≤])
  (global-set-key (kbd "C-x g ! = SPC") [?≠])
      
  (global-set-key (kbd "C-x g nil SPC") [?∅])

  (global-set-key (kbd "C-x g neg SPC") [?¬])

  (global-set-key (kbd "C-x g and SPC") [?∧])
  (global-set-key (kbd "C-x g or SPC") [?∨])

  (global-set-key (kbd "C-x g ex SPC") [?∃])
  (global-set-key (kbd "C-x g exists SPC") [?∃])
  (global-set-key (kbd "C-x g all SPC") [?∀])

  (global-set-key (kbd "C-x g do SPC") [?⟳])

  (global-set-key (kbd "C-x g rm SPC") [?◨])
  (global-set-key (kbd "C-x g lm SPC") [?◧])

  (global-set-key (kbd "C-x g cont SPC") [?⋯])
  (global-set-key (kbd "C-x g continuation SPC") [?⋯])

  (global-set-key (kbd "C-x g fork SPC") [?☥]) 


;; lisp mode
;;
  (setq lisp-indent-offset 2)

  (modify-syntax-entry ?[ "(]" lisp-mode-syntax-table)
  (modify-syntax-entry ?] ")[" lisp-mode-syntax-table)
  (modify-syntax-entry ?{ "(}" lisp-mode-syntax-table)
  (modify-syntax-entry ?} "){" lisp-mode-syntax-table)
